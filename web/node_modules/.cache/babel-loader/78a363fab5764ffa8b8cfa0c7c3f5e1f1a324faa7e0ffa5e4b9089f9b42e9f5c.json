{"ast":null,"code":"import React from'react';import styled from'styled-components';import{jsx as _jsx,jsxs as _jsxs}from\"react/jsx-runtime\";const ListContainer=styled.div`\n  flex: 1;\n  overflow-y: auto;\n`;const ConversationItem=styled.div`\n  padding: 15px 20px;\n  border-bottom: 1px solid #e0e0e0;\n  cursor: pointer;\n  background: ${props=>props.selected?'#e3f2fd':'white'};\n  transition: background-color 0.2s ease;\n  \n  &:hover {\n    background: ${props=>props.selected?'#e3f2fd':'#f5f5f5'};\n  }\n`;const ConversationHeader=styled.div`\n  display: flex;\n  align-items: center;\n  gap: 12px;\n  margin-bottom: 8px;\n`;const Avatar=styled.div`\n  width: 40px;\n  height: 40px;\n  border-radius: 50%;\n  background: ${props=>props.color||'#0088cc'};\n  display: flex;\n  align-items: center;\n  justify-content: center;\n  color: white;\n  font-size: 16px;\n  font-weight: 500;\n`;const ConversationInfo=styled.div`\n  flex: 1;\n  min-width: 0;\n`;const ConversationTitle=styled.div`\n  font-weight: 500;\n  color: #333;\n  margin-bottom: 4px;\n  overflow: hidden;\n  text-overflow: ellipsis;\n  white-space: nowrap;\n`;const ConversationUsername=styled.div`\n  font-size: 14px;\n  color: #666;\n  display: flex;\n  align-items: center;\n  gap: 6px;\n`;const ConversationMeta=styled.div`\n  display: flex;\n  justify-content: space-between;\n  align-items: center;\n  margin-top: 8px;\n`;const LastMessage=styled.div`\n  font-size: 14px;\n  color: #666;\n  overflow: hidden;\n  text-overflow: ellipsis;\n  white-space: nowrap;\n  flex: 1;\n  margin-right: 10px;\n`;const LastTime=styled.div`\n  font-size: 12px;\n  color: #999;\n  white-space: nowrap;\n`;const EmptyState=styled.div`\n  padding: 40px 20px;\n  text-align: center;\n  color: #666;\n`;const ConversationList=_ref=>{let{conversations,selectedConversation,onSelectConversation,getConversationIcon}=_ref;const getAvatarColor=type=>{switch(type){case'user':return'#28a745';case'bot':return'#17a2b8';case'group':return'#fd7e14';case'channel':return'#6f42c1';default:return'#0088cc';}};const formatTime=timestamp=>{const date=new Date(timestamp);const now=new Date();const diff=now-date;const oneDay=24*60*60*1000;if(diff<oneDay){return date.toLocaleTimeString('zh-CN',{hour:'2-digit',minute:'2-digit'});}else if(diff<7*oneDay){return date.toLocaleDateString('zh-CN',{weekday:'short'});}else{return date.toLocaleDateString('zh-CN',{month:'short',day:'numeric'});}};const getInitials=title=>{if(!title)return'?';const words=title.split(' ');if(words.length>=2){return(words[0][0]+words[1][0]).toUpperCase();}return title.substring(0,2).toUpperCase();};if(!conversations||conversations.length===0){return/*#__PURE__*/_jsx(ListContainer,{children:/*#__PURE__*/_jsxs(EmptyState,{children:[\"\\u6682\\u65E0\\u4F1A\\u8BDD\\u8BB0\\u5F55\",/*#__PURE__*/_jsx(\"br\",{}),\"\\u8BF7\\u70B9\\u51FB\\\"\\u540C\\u6B65\\\"\\u6309\\u94AE\\u83B7\\u53D6Telegram\\u4F1A\\u8BDD\"]})});}return/*#__PURE__*/_jsx(ListContainer,{children:conversations.map(conversation=>/*#__PURE__*/_jsxs(ConversationItem,{selected:(selectedConversation===null||selectedConversation===void 0?void 0:selectedConversation.id)===conversation.id,onClick:()=>onSelectConversation(conversation),children:[/*#__PURE__*/_jsxs(ConversationHeader,{children:[/*#__PURE__*/_jsx(Avatar,{color:getAvatarColor(conversation.type),children:conversation.avatar_url?/*#__PURE__*/_jsx(\"img\",{src:conversation.avatar_url,alt:conversation.title,style:{width:'100%',height:'100%',borderRadius:'50%',objectFit:'cover'}}):getInitials(conversation.title)}),/*#__PURE__*/_jsxs(ConversationInfo,{children:[/*#__PURE__*/_jsx(ConversationTitle,{children:conversation.title}),/*#__PURE__*/_jsxs(ConversationUsername,{children:[getConversationIcon(conversation.type),conversation.username&&`@${conversation.username}`]})]})]}),/*#__PURE__*/_jsxs(ConversationMeta,{children:[/*#__PURE__*/_jsx(LastMessage,{children:conversation.last_message||'暂无消息'}),/*#__PURE__*/_jsx(LastTime,{children:conversation.last_time&&formatTime(conversation.last_time)})]})]},conversation.id))});};export default ConversationList;","map":{"version":3,"names":["React","styled","jsx","_jsx","jsxs","_jsxs","ListContainer","div","ConversationItem","props","selected","ConversationHeader","Avatar","color","ConversationInfo","ConversationTitle","ConversationUsername","ConversationMeta","LastMessage","LastTime","EmptyState","ConversationList","_ref","conversations","selectedConversation","onSelectConversation","getConversationIcon","getAvatarColor","type","formatTime","timestamp","date","Date","now","diff","oneDay","toLocaleTimeString","hour","minute","toLocaleDateString","weekday","month","day","getInitials","title","words","split","length","toUpperCase","substring","children","map","conversation","id","onClick","avatar_url","src","alt","style","width","height","borderRadius","objectFit","username","last_message","last_time"],"sources":["/Users/zhangshijie/Documents/web3Task/tgBackup/web/src/components/ConversationList.js"],"sourcesContent":["import React from 'react';\nimport styled from 'styled-components';\n\nconst ListContainer = styled.div`\n  flex: 1;\n  overflow-y: auto;\n`;\n\nconst ConversationItem = styled.div`\n  padding: 15px 20px;\n  border-bottom: 1px solid #e0e0e0;\n  cursor: pointer;\n  background: ${props => props.selected ? '#e3f2fd' : 'white'};\n  transition: background-color 0.2s ease;\n  \n  &:hover {\n    background: ${props => props.selected ? '#e3f2fd' : '#f5f5f5'};\n  }\n`;\n\nconst ConversationHeader = styled.div`\n  display: flex;\n  align-items: center;\n  gap: 12px;\n  margin-bottom: 8px;\n`;\n\nconst Avatar = styled.div`\n  width: 40px;\n  height: 40px;\n  border-radius: 50%;\n  background: ${props => props.color || '#0088cc'};\n  display: flex;\n  align-items: center;\n  justify-content: center;\n  color: white;\n  font-size: 16px;\n  font-weight: 500;\n`;\n\nconst ConversationInfo = styled.div`\n  flex: 1;\n  min-width: 0;\n`;\n\nconst ConversationTitle = styled.div`\n  font-weight: 500;\n  color: #333;\n  margin-bottom: 4px;\n  overflow: hidden;\n  text-overflow: ellipsis;\n  white-space: nowrap;\n`;\n\nconst ConversationUsername = styled.div`\n  font-size: 14px;\n  color: #666;\n  display: flex;\n  align-items: center;\n  gap: 6px;\n`;\n\nconst ConversationMeta = styled.div`\n  display: flex;\n  justify-content: space-between;\n  align-items: center;\n  margin-top: 8px;\n`;\n\nconst LastMessage = styled.div`\n  font-size: 14px;\n  color: #666;\n  overflow: hidden;\n  text-overflow: ellipsis;\n  white-space: nowrap;\n  flex: 1;\n  margin-right: 10px;\n`;\n\nconst LastTime = styled.div`\n  font-size: 12px;\n  color: #999;\n  white-space: nowrap;\n`;\n\nconst EmptyState = styled.div`\n  padding: 40px 20px;\n  text-align: center;\n  color: #666;\n`;\n\nconst ConversationList = ({ \n  conversations, \n  selectedConversation, \n  onSelectConversation,\n  getConversationIcon \n}) => {\n  const getAvatarColor = (type) => {\n    switch (type) {\n      case 'user':\n        return '#28a745';\n      case 'bot':\n        return '#17a2b8';\n      case 'group':\n        return '#fd7e14';\n      case 'channel':\n        return '#6f42c1';\n      default:\n        return '#0088cc';\n    }\n  };\n\n  const formatTime = (timestamp) => {\n    const date = new Date(timestamp);\n    const now = new Date();\n    const diff = now - date;\n    const oneDay = 24 * 60 * 60 * 1000;\n\n    if (diff < oneDay) {\n      return date.toLocaleTimeString('zh-CN', { \n        hour: '2-digit', \n        minute: '2-digit' \n      });\n    } else if (diff < 7 * oneDay) {\n      return date.toLocaleDateString('zh-CN', { \n        weekday: 'short' \n      });\n    } else {\n      return date.toLocaleDateString('zh-CN', { \n        month: 'short', \n        day: 'numeric' \n      });\n    }\n  };\n\n  const getInitials = (title) => {\n    if (!title) return '?';\n    const words = title.split(' ');\n    if (words.length >= 2) {\n      return (words[0][0] + words[1][0]).toUpperCase();\n    }\n    return title.substring(0, 2).toUpperCase();\n  };\n\n  if (!conversations || conversations.length === 0) {\n    return (\n      <ListContainer>\n        <EmptyState>\n          暂无会话记录\n          <br />\n          请点击\"同步\"按钮获取Telegram会话\n        </EmptyState>\n      </ListContainer>\n    );\n  }\n\n  return (\n    <ListContainer>\n      {conversations.map((conversation) => (\n        <ConversationItem\n          key={conversation.id}\n          selected={selectedConversation?.id === conversation.id}\n          onClick={() => onSelectConversation(conversation)}\n        >\n          <ConversationHeader>\n            <Avatar color={getAvatarColor(conversation.type)}>\n              {conversation.avatar_url ? (\n                <img \n                  src={conversation.avatar_url} \n                  alt={conversation.title}\n                  style={{ \n                    width: '100%', \n                    height: '100%', \n                    borderRadius: '50%',\n                    objectFit: 'cover' \n                  }}\n                />\n              ) : (\n                getInitials(conversation.title)\n              )}\n            </Avatar>\n            <ConversationInfo>\n              <ConversationTitle>{conversation.title}</ConversationTitle>\n              <ConversationUsername>\n                {getConversationIcon(conversation.type)}\n                {conversation.username && `@${conversation.username}`}\n              </ConversationUsername>\n            </ConversationInfo>\n          </ConversationHeader>\n          \n          <ConversationMeta>\n            <LastMessage>\n              {conversation.last_message || '暂无消息'}\n            </LastMessage>\n            <LastTime>\n              {conversation.last_time && formatTime(conversation.last_time)}\n            </LastTime>\n          </ConversationMeta>\n        </ConversationItem>\n      ))}\n    </ListContainer>\n  );\n};\n\nexport default ConversationList;"],"mappings":"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","ignoreList":[]},"metadata":{},"sourceType":"module","externalDependencies":[]}